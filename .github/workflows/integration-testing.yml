name: Integration Test
on: push

jobs:
  Test_Integration_App:
    name: Integration Test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    env:
      ECR_REPO: public.ecr.aws/u0d6r4y4/aws-otel-dotnet-test
    steps:

      - name: Checkout AWS OTel Dotnet Repo
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-duration-seconds: 1200
          aws-region: us-east-1

      - name: Login to AWS ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push Integration Test App Docker Image to ECR
        uses: docker/build-push-action@v2
        with:
          context: integration-test-app
          push: true
          tags: |
            ${{ env.ECR_REPO }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Setup and Run Test Containers
        run: |
          docker-compose up --abort-on-container-exit
        working-directory: .github/collector
        env:
          INSTANCE_ID: ${{ github.run_id }}-${{ github.run_number }}
          LISTEN_ADDRESS: 0.0.0.0:8080
          APP_IMAGE: ${{ env.ECR_REPO }}:${{ github.sha }}
          VALIDATOR_COMMAND: -c default-xray-trace-validation.yml --endpoint http://app:8080 --metric-namespace default -t ${{ github.run_id }}-${{ github.run_number }}
